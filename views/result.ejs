<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>GitHub Analyzer</title>
  <!-- Chart.js -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <!-- Feather Icons for accents -->
  <script src="https://unpkg.com/feather-icons"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --color-bg: #040408;
      --color-card: #11121c;
      --color-glass: #191a2ccc;
      --color-border: #23232e;
      --color-accent: #47fff1;
      --color-accent2: #ed5e80;
      --color-accent3: #ffe78d;
      --color-title: #fafaff;
      --color-secondary: #a2adc3;
      --color-blue: #37b5ff;
      --color-green: #56ffaa;
      --color-lavender: #a871ff;
      --radius: 20px;
    }
    * { box-sizing: border-box; }
    body {
      background: var(--color-bg);
      color: var(--color-title);
      font-family: 'Inter', sans-serif;
      margin: 0;
      min-height: 100vh;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      letter-spacing: .15px;
    }
    h1 {
      margin: 50px 0 30px 0;
      font-size: 2.6rem;
      font-weight: 700;
      letter-spacing: 2.5px;
      text-align: center;
      user-select:none;
      animation: fadeInDown .8s cubic-bezier(.77,.2,.45,1.01);
    }
    @keyframes fadeInDown {
      from { opacity:0; transform:translateY(-20px);}
      to { opacity:1; transform:translateY(0);}
    }
    form {
      display: flex;
      gap: 12px;
      margin-bottom: 28px;
      background: var(--color-card);
      border-radius: 15px;
      padding: 10px 20px;
      border: 1.2px solid var(--color-border);
      box-shadow: 0 2px 14px #00000033;
      animation: slideIn .7s .12s both;
    }
    @keyframes slideIn {
      from { opacity:0; transform: scale(.97);}
      to { opacity:1; transform: scale(1);}
    }
    input {
      padding: 12px 14px;
      font-size: 1.1rem;
      border-radius: 8px;
      border: 1.5px solid #161626;
      color: var(--color-title);
      background: #181828;
      font-family: inherit;
      outline: none;
      min-width: 180px;
      transition: border .16s, box-shadow .13s;
    }
    input:focus { border-color: var(--color-accent); box-shadow: 0 0 8px #2cffe7cc; }
    button {
      background: linear-gradient(90deg, var(--color-accent) 30%, var(--color-lavender) 90%);
      color: #111012;
      font-weight: 700;
      font-size: 1.08rem;
      border: none;
      border-radius: 8px;
      padding: 12px 24px;
      cursor: pointer;
      letter-spacing: 1.1px;
      box-shadow: 0 1px 7px #47fff166;
      transition: filter 0.17s, box-shadow .19s;
    }
    button:hover { filter: brightness(1.13); box-shadow: 0 2px 18px #47fff1aa; }
    .dashboard-grid {
      display: grid;
      grid-template-columns: 300px 1fr;
      gap: 26px;
      max-width: 1050px;
      margin: 0 auto;
      width: 96vw;
      animation: fadeIn .7s cubic-bezier(.88,.22,.22,1);
    }
    @keyframes fadeIn { from {opacity:0;} to {opacity:1;} }
    .sidebar {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    .profile-card {
      background: var(--color-card);
      padding: 2.0rem 1rem 1.3rem 1rem;
      border-radius: var(--radius);
      border: 1.2px solid var(--color-border);
      box-shadow: 0 7px 22px #00ffe688, 0 1.5px 12px #040c128c;
      margin-bottom: 10px;
      display: flex;
      align-items: center;
      flex-direction: column;
      gap: 9px;
      transition: transform 0.22s, box-shadow .28s;
    }
    .profile-card:hover {
      box-shadow: 0 12px 48px #00f5e4a0, 0 0 10px 6px #ffe78d55;
      transform: scale(1.03);
    }
    .profile-avatar {
      border-radius: 50%;
      width: 80px; height: 80px;
      margin-bottom: 11px;
      border: 3.5px solid var(--color-accent);
      object-fit: cover;
      transition: box-shadow 0.25s, border-color 0.22s;
      background: #181833;
      box-shadow: 0 1px 22px #00ffe6bf;
    }
    .profile-card:hover .profile-avatar {
      border-color: var(--color-accent2);
      box-shadow: 0 0 26px #ed5e80ae, 0 0 8px 2px #ffe78dcc;
    }
    .profile-username {
      font-size: 1.19rem;
      font-weight: 700;
      color: var(--color-title);
      margin-bottom: 2px;
      margin-top:2px;
      text-align: center;
    }
    .profile-handle {
      color: var(--color-secondary);
      font-size: 1rem;
      margin-bottom: 7px;
      text-align: center;
    }
    .profile-bio {
      color: var(--color-secondary);
      font-size: 1rem;
      text-align: center;
    }
    .stats-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 7px;
      margin-top: 8px;
    }
    .stat-box {
      background: var(--color-glass);
      border-radius: 13.5px;
      border: 1.1px solid var(--color-border);
      text-align: center;
      padding: 11px 2px 10px 2px;
      box-shadow: 0 1.5px 10px #0adcc333 inset;
      display: flex;
      flex-direction: column;
      align-items: center;
      min-width: 80px;
      transition: box-shadow 0.18s, transform 0.21s;
      cursor: pointer;
      position: relative;
      will-change: transform, box-shadow;
    }
    .stat-box:hover {
      box-shadow: 0 0 34px #3bf9edb8, 0 0 6px #a871ffcc;
      transform: scale(1.08);
      z-index: 11;
      color: var(--color-accent);
    }
    .stat-value {
      font-weight: 700;
      font-size: 1.19rem;
      color: var(--color-accent2);
      margin-bottom: 2px;
      margin-top: 2px;
      transition: color 0.16s;
    }
    .stat-box:hover .stat-value {
      color: var(--color-accent);
    }
    .stat-label {
      font-size: 0.97rem;
      color: var(--color-secondary);
      letter-spacing: 0.06em;
      user-select: none;
    }
    .main-panel {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 17px;
      grid-template-areas:
        "langs commits"
        "stars prvsissues";
    }
    .widget {
      background: var(--color-card);
      border-radius: var(--radius);
      border: 1.1px solid var(--color-border);
      box-shadow: 0 4px 18px #001a2096;
      padding: 0.95rem 0.9rem 0.7rem 0.9rem;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      width: 100%;
      min-width: 0;
      position: relative;
      cursor: pointer;
      transition: box-shadow 0.28s, transform 0.22s;
      will-change: transform, box-shadow;
    }
    .widget:hover {
      box-shadow: 0 9px 34px #56ffaa99, 0 0 12px #ffe78d88;
      transform: scale(1.04);
      z-index: 10;
    }
    .widget-title {
      font-size: 1.09rem;
      font-weight: 700;
      color: var(--color-title);
      margin-bottom: 7px;
      letter-spacing: .08em;
      user-select: none;
      text-shadow: 0 0 6px #47fff144;
    }
    /* grid areas */
    .widget.langs{ grid-area:langs;}
    .widget.commits{ grid-area:commits;}
    .widget.stars{ grid-area:stars;}
    .widget.prvsissues{ grid-area:prvsissues;}
    /* Legend list */
    .legend-list {
      display: flex; flex-wrap: wrap; gap: 8px; margin-top: 1px;
      margin-bottom:4px;
    }
    .legend-item {
      display: flex; align-items: center; gap: 4px;
      font-size: 0.96rem; color: var(--color-secondary);
      margin-right: 7px;
      cursor:pointer;
      opacity:.91;
      border-radius:6px;
      padding: 1px 5px;
      transition:color .14s, box-shadow .18s;
    }
    .legend-item:hover {
      color: var(--color-accent);
      box-shadow: 0 0 9px 2px #2cfff922;
      opacity:1;
    }
    .legend-color { width: 12px; height: 12px; border-radius: 3px; display: inline-block; }
    canvas {
      margin-top: 6px;
      background: #191922;
      border-radius: 8px;
      max-width: 340px !important;
      width: 96% !important;
      height: 170px !important;
      box-shadow: 0 0 16px 2px #00fff955;
      transition: box-shadow .21s;
      display:block;
    }
    canvas:hover {
      box-shadow: 0 0 32px #ffe78daa, 0 0 3px #ed5e80cc;
    }
    @media (max-width: 960px) {
      .dashboard-grid { grid-template-columns: 1fr;}
      .main-panel { grid-template-columns: 1fr; gap:12px;}
    }
    @media (max-width: 560px) {
      h1 { font-size: 1.22rem; }
      .profile-card {padding:1.05rem 0.3rem;}
      .main-panel { gap: 7px;}
      form { flex-direction: column; gap: 9px;max-width:284px;}
      .legend-list{flex-wrap:wrap;gap:5px;}
    }
    ::selection { background:#d1fff555; }
  </style>
</head>
<body>
  <h1>GitHub Analyzer</h1>
  <form method="POST" action="/analyzer">
    <input name="username" placeholder="Enter GitHub username" required />
    <button type="submit">Analyze</button>
  </form>
  <% if (error) { %>
    <div class="error" style="color:#ff8a73;font-weight:700;background:#270218ee;margin:19px 0;padding:13px 16px;border-radius:8px;text-align:center;"><%= error %></div>
  <% } %>
  <% if (data) { %>
    <div class="dashboard-grid">
      <!-- Sidebar: Profile & Stats -->
      <div class="sidebar">
        <div class="profile-card">
          <img class="profile-avatar" src="<%= data.avatar %>" alt="User Avatar" />
          <div class="profile-username"><%= data.name || data.username %></div>
          <div class="profile-handle">@<%= data.username %></div>
          <div class="profile-bio"><%= data.bio || 'No bio provided.' %></div>
          <div class="stats-grid">
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.followers %>">0</div>
              <div class="stat-label">Followers</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.publicRepos %>">0</div>
              <div class="stat-label">Repos</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalCommits %>">0</div>
              <div class="stat-label">Commits</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalPRs %>">0</div>
              <div class="stat-label">PRs</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalIssues %>">0</div>
              <div class="stat-label">Issues</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalStars %>">0</div>
              <div class="stat-label">Stars</div>
            </div>
          </div>
        </div>
      </div>
      <!-- Main Panel: Graphs & Analytics -->
      <div class="main-panel">
        <div class="widget langs">
          <div class="widget-title">Top Languages</div>
          <canvas id="languageChart"></canvas>
          <div class="legend-list">
            <% const colors=['#ffe78d','#a871ff','#2ecbff','#56ffaa','#ed5e80','#ffc145','#31e6d4','#fff6ae','#79c3fa']; let i=0;
            for (let lang in data.languages) { %>
              <div class="legend-item">
                <span class="legend-color" style="background:<%= colors[i % colors.length] %>"></span>
                <span><%= lang %></span>
              </div>
            <% i++; } %>
          </div>
        </div>
        <div class="widget commits">
          <div class="widget-title">Commits Over Last Year</div>
          <canvas id="commitsChart"></canvas>
        </div>
        <div class="widget stars">
          <div class="widget-title">Stars per Repository</div>
          <canvas id="starsChart"></canvas>
        </div>
        <div class="widget prvsissues">
          <div class="widget-title">PRs vs Issues</div>
          <canvas id="prvsissuesChart"></canvas>
        </div>
      </div>
    </div>
  <% } %>
  <% if (data) { %>
    <script>
      // Animated stat numbers
      document.querySelectorAll('[data-animate-number]').forEach(el => {
        const final = +el.dataset.animateNumber;
        let frame = 0, totalFrames = 33, start = 0;
        function animateNum() {
          el.textContent = Math.round(start + (final-start)* frame / totalFrames).toLocaleString();
          if (frame++ < totalFrames) requestAnimationFrame(animateNum);
          else el.textContent = final.toLocaleString();
        }
        animateNum();
      });

      // Chart.js graphs
      const languageData = <%- JSON.stringify(data.languages) %>;
      const langLabels = Object.keys(languageData);
      const langValues = Object.values(languageData);
      const langColors = ['#ffe78d','#a871ff','#2ecbff','#56ffaa','#ed5e80','#ffc145','#31e6d4','#fff6ae','#79c3fa'];
      new Chart(document.getElementById('languageChart'), {
        type: 'doughnut',
        data: {
          labels: langLabels,
          datasets: [{
            data: langValues,
            backgroundColor: langColors,
            borderWidth: 3,
            borderColor: '#171726'
          }]
        },
        options: {
          plugins: {legend: { display: false }},
          cutout: '75%',
          animation: { animateRotate:true, animateScale:true, duration:1100 },
        }
      });

      // Commits Over Last Year (Line)
      const commitsData = <%- JSON.stringify(data.commitsPerMonth || { Jan: 0, Feb: 0, Mar: 0, Apr: 0, May: 0, Jun: 0, Jul: 0, Aug: 0, Sep: 0, Oct: 0, Nov: 0, Dec: 0 }) %>;
      new Chart(document.getElementById('commitsChart').getContext('2d'), {
        type: 'line',
        data: {
          labels: Object.keys(commitsData),
          datasets: [{
            label: 'Commits',
            data: Object.values(commitsData),
            borderColor: '#2ecbff',
            backgroundColor: 'rgba(46,203,255,0.11)',
            fill:true,
            tension: 0.4,
            pointBackgroundColor: '#ffe78d',
          }]
        },
        options: {
          plugins: { legend: { display: false }},
          scales: {
            x: { ticks: { color: "#babccb" }, grid: {color:'#232237'} },
            y: { ticks: { color: "#babccb" }, grid: {color:'#222'} }
          },
          animation: { duration:950, easing:'easeOutQuart' }
        }
      });

      // Stars per Repository (Bar)
      const starsData = <%- JSON.stringify(data.starsPerRepo || {}) %>;
      new Chart(document.getElementById('starsChart').getContext('2d'), {
        type: 'bar',
        data: {
          labels: Object.keys(starsData),
          datasets: [{
            label: "Stars",
            data: Object.values(starsData),
            backgroundColor: '#ffe78d',
            borderRadius:8,
            borderWidth: 0,
          }]
        },
        options: {
          plugins: { legend: { display: false } },
          scales: {
            x: { ticks: { color: "#babccb", maxRotation:45, minRotation:45 }, grid:{color:'#232237'} },
            y: { ticks: { color: "#babccb" }, grid: {color:'#222'}}
          },
          animation: {duration:890}
        }
      });

      // PRs vs Issues (Pie)
      const prCount = <%- JSON.stringify(data.totalPRs) %>;
      const issuesCount = <%- JSON.stringify(data.totalIssues) %>;
      new Chart(document.getElementById('prvsissuesChart').getContext('2d'), {
        type: 'pie',
        data: {
          labels: ["Pull Requests", "Issues"],
          datasets: [{
            data: [prCount, issuesCount],
            backgroundColor: ["#37b5ff", "#ed5e80"],
            borderColor: "#171726",
            borderWidth: 3,
          }]
        },
        options: {
          plugins: { legend: { labels: { color: "#fafaff", font: {size: 15}} } },
          animation: { animateScale:true, animateRotate:true, duration:1100 }
        }
      });

      feather.replace();
    </script>
  <% } %>
</body>
</html>
