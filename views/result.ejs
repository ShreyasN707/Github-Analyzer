<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>GitHub Analyzer - Terminal Style</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://unpkg.com/feather-icons"></script>
  <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@500;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --term-bg: #161818;
      --panel-bg: #1b1d1e;
      --card-border: #252e27;
      --card-radius: 13px;
      --card-shadow: 0 2px 18px #202c2044;
      --term-accent: #36ffb4;
      --term-accent-faint: #46eeae31;
      --term-cyan: #77edf4;
      --term-yellow: #e3df85;
      --term-text: #e6ffe9;
      --term-label: #b5bcb7;
    }
    body {
      background: var(--term-bg);
      min-height: 100vh;
      font-family: 'JetBrains Mono', monospace;
      color: var(--term-text);
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      align-items: center;
      letter-spacing: .01em;
    }
    h1 {
      margin: 42px 0 24px 0;
      font-size: 2.1rem;
      font-weight: 700;
      color: var(--term-accent);
      border-left: 6px solid var(--term-accent);
      padding-left: 15px;
      background: transparent;
      letter-spacing: 2px;
      user-select: none;
    }
    form {
      background: var(--panel-bg);
      border: 1.5px solid var(--card-border);
      border-radius: var(--card-radius);
      padding: 11px 16px;
      display: flex;
      gap: 11px;
      margin-bottom: 30px;
      box-shadow: var(--card-shadow);
      min-width: 340px;
      max-width: 98vw;
    }
    input, button {
      font-family: inherit;
      font-size: 1.03rem;
      border-radius: 6px;
      border: none;
      outline: none;
    }
    input {
      background: #141715;
      color: var(--term-text);
      padding: 10px 12px;
      border: 1.35px solid #2a2d24;
      min-width: 160px;
      transition: border-color .12s;
    }
    input:focus { border-color: var(--term-accent);}
    button {
      background: var(--term-accent);
      color: #161818;
      font-weight: 700;
      padding: 10px 20px;
      cursor: pointer;
      border: none;
      box-shadow: 0 2px 12px #34eab144;
      transition: background .18s;
    }
    button:hover {
      background: var(--term-cyan);
      color: #131818;
    }
    .dashboard-grid {
      display: grid;
      grid-template-columns: 280px 1fr;
      gap: 36px;
      max-width: 1100px;
      margin: 0 auto;
      margin-bottom: 45px;
      width: 93vw;
    }
    .sidebar {
      display: flex;
      flex-direction: column;
      gap: 20px;
      min-width: 220px;
    }
    .profile-card {
      background: var(--panel-bg);
      border: 1.5px solid var(--card-border);
      border-radius: var(--card-radius);
      padding: 1.4rem 1.2rem 1.15rem 1.2rem;
      display: flex;
      flex-direction: column;
      align-items: center;
      min-height: 220px;
      box-shadow: var(--card-shadow);
    }
    .profile-avatar {
      border-radius: 50%;
      width: 64px;
      height: 64px;
      margin-bottom: 10px;
      border: 2.2px solid var(--term-accent);
      object-fit: cover;
      background: #171f1c;
      box-shadow: none;
    }
    .profile-username {
      font-size: 1.08rem;
      font-weight: 700;
      color: var(--term-accent);
      letter-spacing: .09em;
      margin-bottom: 5px;
    }
    .profile-handle {
      color: var(--term-cyan);
      font-size: .97rem;
      margin-bottom: 8px;
    }
    .profile-bio {
      color: var(--term-label);
      font-size: .96rem;
      text-align: center;
      min-height: 14px;
      margin-bottom: 12px;
    }
    .stats-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 10px;
      margin-top: 3px;
      width: 100%;
    }
    .stat-box {
      background: #181c19;
      border-radius: 7px;
      border: 1.2px solid #232e24;
      text-align: center;
      padding: 6px 3px 7px 3px;
      display: flex;
      flex-direction: column;
      align-items: center;
      font-size: .95rem;
      transition: border-color .17s;
      box-shadow: 0 1.5px 7px #141c13aa inset;
    }
    .stat-box:hover {
      border-color: var(--term-cyan);
      color: var(--term-cyan);
      z-index: 9;
    }
    .stat-value {
      font-weight: 700;
      font-size: 1.04rem;
      color: var(--term-yellow);
      letter-spacing: 0.01em;
      margin-bottom: 2px;
      margin-top: 0;
      transition: color 0.13s;
    }
    .stat-box:hover .stat-value {
      color: var(--term-accent);
    }
    .stat-label {
      font-size: .97rem;
      color: var(--term-label);
      letter-spacing: 0.03em;
      padding-top:1px;
    }
    .main-panel {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 26px;
      grid-template-areas:
        "langs commits"
        "stars prvsissues";
    }
    .widget {
      background: var(--panel-bg);
      border-radius: var(--card-radius);
      border: 1.7px solid var(--card-border);
      box-shadow: var(--card-shadow);
      padding: 0.85rem 1rem 0.7rem 1rem;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      min-width: 0;
      position: relative;
    }
    .widget-title {
      font-size: 1.01rem;
      font-weight: 700;
      color: var(--term-cyan);
      margin-bottom: 7px;
      margin-top: 0;
      letter-spacing: .05em;
      user-select: none;
    }
    .legend-list {
      display: flex; flex-wrap: wrap; gap: 9px; margin-top: 7px; margin-bottom:6px;
    }
    .legend-item {
      display: flex; align-items: center; gap: 5px;
      font-size: .94rem;
      color: var(--term-label);
      margin-right: 7px;
      border-radius: 7px;
      padding: 1px 5px;
      transition:color .1s, background 0.11s;
      background: #171918;
      outline: 1px solid #232e24;
      opacity: .92;
    }
    .legend-item:hover {
      color: var(--term-cyan);
      background: #141b14;
      opacity:1;
    }
    .legend-color {
      width: 12px;
      height: 12px;
      border-radius: 1px;
      border: 1.2px solid #36ffb4;
      display: inline-block;
    }
    canvas {
      margin-top: 5px;
      background: #171d18;
      border-radius: 7px;
      max-width: 285px !important;
      width: 94% !important;
      height: 118px !important;
      border: 1.5px solid #252e27;
      box-shadow: none;
    }
    canvas:hover { border-color: var(--term-cyan);}
    /* grid mapping */
    .widget.langs{grid-area:langs;}
    .widget.commits{grid-area:commits;}
    .widget.stars{grid-area:stars;}
    .widget.prvsissues{grid-area:prvsissues;}
    @media (max-width: 900px) {
      .dashboard-grid { grid-template-columns: 1fr;}
      .main-panel { grid-template-columns: 1fr; gap:9px; }
    }
    @media (max-width: 520px) {
      h1 { font-size: 1.03rem; }
      .profile-card {padding:0.92rem 0.21rem;}
      .main-panel { gap: 5px;}
      form { max-width:98vw; flex-direction:column;gap:7px;}
      .legend-list{flex-wrap:wrap;gap:5px;}
      canvas{height:85px !important;}
    }
    ::selection { background:#24fa9420; }
  </style>
</head>
<body>
  <h1>GitHub Analyzer ░▒▓ (Terminal)</h1>
  <form method="POST" action="/analyzer">
    <input name="username" placeholder="Enter GitHub username" required />
    <button type="submit">Analyze</button>
  </form>
  <% if (error) { %>
    <div class="error" style="color:#e1e546;font-weight:700;background:#212417e0;margin:19px 0;padding:10px 14px;border-radius:8px;text-align:center;border:1.7px solid var(--term-yellow)"><%= error %></div>
  <% } %>
  <% if (data) { %>
    <div class="dashboard-grid">
      <div class="sidebar">
        <div class="profile-card">
          <img class="profile-avatar" src="<%= data.avatar %>" alt="User Avatar" />
          <div class="profile-username"><%= data.name || data.username %></div>
          <div class="profile-handle">@<%= data.username %></div>
          <div class="profile-bio"><%= data.bio || 'No bio provided.' %></div>
          <div class="stats-grid">
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.followers %>">0</div>
              <div class="stat-label">Followers</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.publicRepos %>">0</div>
              <div class="stat-label">Repos</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalCommits %>">0</div>
              <div class="stat-label">Commits</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalPRs %>">0</div>
              <div class="stat-label">PRs</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalIssues %>">0</div>
              <div class="stat-label">Issues</div>
            </div>
            <div class="stat-box">
              <div class="stat-value" data-animate-number="<%= data.totalStars %>">0</div>
              <div class="stat-label">Stars</div>
            </div>
          </div>
        </div>
      </div>
      <!-- Main Panel: Graphs & Analytics -->
      <div class="main-panel">
        <div class="widget langs">
          <div class="widget-title">Top Languages</div>
          <canvas id="languageChart"></canvas>
          <div class="legend-list">
            <% const termColors=['#24fa94','#44fff8','#ffe78d','#e1e546','#a871ff','#ed5e80','#ffe78d','#d3ff5a','#45a5fa','#b2ffa1'];let i=0;
               for(let lang in data.languages) { %>
              <div class="legend-item">
                <span class="legend-color" style="background:<%= termColors[i % termColors.length] %>"></span>
                <span><%= lang %></span>
              </div>
            <% i++; } %>
          </div>
        </div>
        <div class="widget commits">
          <div class="widget-title">Commits Over Last Year</div>
          <canvas id="commitsChart"></canvas>
        </div>
        <div class="widget stars">
          <div class="widget-title">Stars per Repository</div>
          <canvas id="starsChart"></canvas>
        </div>
        <div class="widget prvsissues">
          <div class="widget-title">PRs vs Issues</div>
          <canvas id="prvsissuesChart"></canvas>
        </div>
      </div>
    </div>
  <% } %>
  <% if (data) { %>
    <script>
      // Animated stat numbers
      document.querySelectorAll('[data-animate-number]').forEach(el => {
        const final = +el.dataset.animateNumber;
        let frame = 0, totalFrames = 23, start = 0;
        function animateNum() {
          el.textContent = Math.round(final* frame / totalFrames).toLocaleString();
          if (frame++ < totalFrames) requestAnimationFrame(animateNum);
          else el.textContent = final.toLocaleString();
        }
        animateNum();
      });
      // Terminal color palette
      const termColors = ['#24fa94','#44fff8','#ffe78d','#e1e546','#a871ff','#ed5e80','#ffe78d','#d3ff5a','#45a5fa','#b2ffa1'];
      // Top Languages Chart
      const languageData = <%- JSON.stringify(data.languages) %>;
      const langLabels = Object.keys(languageData);
      const langValues = Object.values(languageData);
      new Chart(document.getElementById('languageChart'), {
        type: 'doughnut',
        data: {
          labels: langLabels,
          datasets: [{
            data: langValues,
            backgroundColor: termColors,
            borderWidth: 2,
            borderColor: '#161818'
          }]
        },
        options: {
          plugins: { legend: { display: false }},
          cutout: '80%',
          animation: { animateRotate:true, animateScale:true, duration:900 },
        }
      });
      // Commits by Month (Line)
      const commitsData = <%- JSON.stringify(data.commitsPerMonth || { Jan: 0, Feb: 0, Mar: 0, Apr: 0, May: 0, Jun: 0, Jul: 0, Aug: 0, Sep: 0, Oct: 0, Nov: 0, Dec: 0 }) %>;
      new Chart(document.getElementById('commitsChart').getContext('2d'), {
        type: 'line',
        data: {
          labels: Object.keys(commitsData),
          datasets: [{
            label: 'Commits',
            data: Object.values(commitsData),
            borderColor: '#24fa94',
            backgroundColor: 'rgba(36,250,148,0.1)',
            fill:true,
            tension: 0.3,
            pointBackgroundColor: '#e1e546'
          }]
        },
        options: {
          plugins: { legend: { display: false }},
          scales: {
            x: { ticks: { color: "#fafaff"}, grid: {color:'#242b2455'} },
            y: { ticks: { color: "#b7d7c9" }, grid: {color:'#22292144'}}
          },
          animation: { duration:820, easing:'easeInOutSine' }
        }
      });
      // Stars per Repository (Bar)
      const starsData = <%- JSON.stringify(data.starsPerRepo || {}) %>;
      new Chart(document.getElementById('starsChart').getContext('2d'), {
        type: 'bar',
        data: {
          labels: Object.keys(starsData),
          datasets: [{
            label: "Stars",
            data: Object.values(starsData),
            backgroundColor: '#e1e546',
            borderRadius:6,
            borderWidth: 0,
          }]
        },
        options: {
          plugins: { legend: { display: false } },
          scales: {
            x: { ticks: { color: "#fafaff" }, grid:{color:'#23232744'} },
            y: { ticks: { color: "#b1e7c7" }, grid: {color:'#24292244'}}
          },
          animation: {duration:680}
        }
      });
      // PRs vs Issues (Pie)
      const prCount = <%- JSON.stringify(data.totalPRs) %>;
      const issuesCount = <%- JSON.stringify(data.totalIssues) %>;
      new Chart(document.getElementById('prvsissuesChart').getContext('2d'), {
        type: 'pie',
        data: {
          labels: ["Pull Requests", "Issues"],
          datasets: [{
            data: [prCount, issuesCount],
            backgroundColor: ["#24fa94", "#e1e546"],
            borderColor: "#181c1d",
            borderWidth: 2,
          }]
        },
        options: {
          plugins: { legend: { labels: { color: "#24fa94", font: {size: 14}} } },
          animation: { animateScale:true, animateRotate:true, duration:900 }
        }
      });
      feather.replace();
    </script>
  <% } %>
</body>
</html>
