<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>GitHub Analyzer Dashboard</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://unpkg.com/feather-icons"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --bg-main: #0d1117;
      --bg-panel: #161b22;
      --border: #30363d;
      --gray-text: #8b949e;
      --primary: #238636;
      --blue: #388bfd;
      --language-yellow: #e3b341;
      --language-orange: #f77809;
      --language-purple: #a971f7;
      --language-pink: #ff80c6;
      --chart-bg: #1a1f27;
      --widget-shadow: 0 4px 24px #181b2240;
    }
    * { box-sizing: border-box; }
    body {
      background: var(--bg-main);
      margin: 0;
      font-family: 'Inter', 'Segoe UI', Arial, sans-serif;
      color: #c9d1d9;
      min-height: 100vh;
      padding: 32px 0 48px 0;
      display: flex; flex-direction: column; align-items: center;
    }
    h1 {
      margin-bottom: 28px;
      font-size: 2.2rem;
      font-weight: 700;
      letter-spacing: 2px;
      color: #c9d1d9;
      text-align: center;
    }
    form {
      margin-bottom: 28px;
      display: flex;
      gap: 10px;
      background: var(--bg-panel);
      padding: 9px 16px;
      border-radius: 11px;
      border: 1px solid var(--border);
      box-shadow: 0 2px 6px #0d111740;
      max-width: 440px; width: 100%;
    }
    input, button {
      font-size: 1.03rem; font-family: inherit;
      border-radius: 8px; border: none; outline: none;
    }
    input {
      background: #23272e;
      color: #c9d1d9;
      padding: 10px 14px;
      border: 1px solid var(--border);
      flex: 1; min-width: 0;
    }
    input:focus { border: 1.2px solid var(--primary); }
    button {
      background: var(--primary);
      color: #fff;
      font-weight: 700;
      padding: 10px 21px;
      cursor: pointer;
      border: 1.5px solid var(--primary);
      transition: background 0.19s;
    }
    button:hover, button:focus {
      background: #1f883d;
      border-color: #1f883d;
    }
    .dashboard {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 2rem;
      width: 98vw;
      max-width: 1280px;
      margin: 0 auto;
    }
    .card {
      background: var(--bg-panel);
      border-radius: 14px;
      border: 1.5px solid var(--border);
      box-shadow: var(--widget-shadow);
      padding: 1.7rem 1.7rem;
      margin-bottom: 1.5rem;
      width: 100%;
      max-width: 820px;
      min-width: 300px;
      position: relative;
    }
    .profile {
      display: flex;
      align-items: center;
      gap: 25px;
      border-bottom: 1px solid var(--border);
      padding-bottom: 1.2rem;
      margin-bottom: 1.4rem;
      flex-wrap: wrap;
    }
    .profile img {
      border-radius: 50%;
      width: 84px;
      height: 84px;
      border: 2px solid var(--border);
      background: #23272e;
      object-fit: cover;
    }
    .profile-info {
      flex: 1; min-width: 180px;
    }
    .profile h2 {
      margin: 0 0 2px 0;
      font-size: 1.34rem;
      color: #fff;
      font-weight: 700;
      letter-spacing: 0.6px;
    }
    .profile p {
      margin: 2px 0 0 0;
      color: var(--gray-text);
      font-size: 0.99rem;
      line-height: 1.32;
    }
    .stats {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(110px, 1fr));
      gap: 1.0rem; width: 100%;
      margin-bottom: 1.5rem;
    }
    .stat-box {
      background: #23272e;
      border-radius: 10px;
      border: 1px solid var(--border);
      text-align: left;
      padding: 0.5em 1em 0.6em 1em;
      box-shadow: 0 1.5px 5px #161b2230;
      display: flex;
      flex-direction: column;
      gap: 2px;
      font-size: 1.03rem;
      color: #c9d1d9;
    }
    .stat-box h3 {
      color: var(--primary); font-size: 1rem;
      font-weight: 600; margin: 0 0 2px 0;
      display: flex; align-items: center; gap: 5px;
    }
    .stat-box p {
      color: #fff; font-size: 1.13rem; font-weight: 700; margin: 0;
    }
    .stat-icon {
      vertical-align: middle;
      width: 15px; height: 15px;
      color: var(--primary);
    }
    .charts {
      display: flex;
      flex-direction: column;
      gap: 2rem;
      padding-top: 0.5rem;
    }
    .chart-card {
      background: #23272e;
      padding: 1.1rem 1.2rem 0.7rem 1.2rem;
      border-radius: 11px;
      border: 1px solid var(--border);
      margin-bottom: 1.4rem;
      box-shadow: 0 3px 18px #181b2240;
      width: 100%;
      max-width: 480px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .chart-title {
      color: var(--blue);
      font-size: 1.09rem;
      font-weight: 600;
      margin-bottom: 7px;
      align-self: flex-start;
    }
    canvas {
      background: var(--chart-bg);
      border-radius: 11px;
      margin-bottom: 0.5rem;
      box-shadow: 0 0 12px #161b2240;
      width: 100% !important;
      max-width: 400px;
      min-width: 240px;
      display: block;
    }
    .error {
      color: #ff7b72;
      margin-top: 1.4rem;
      background: #320c18cc;
      border: 1px solid #c2445a;
      font-weight: 600;
      font-size: 1.09rem;
      border-radius: 8px;
      padding: 10px 22px;
    }
    @media (max-width: 980px) {
      .dashboard { grid-template-columns: 1fr; }
      .charts { flex-direction: column; }
    }
  </style>
</head>
<body>
  <h1>GitHub Analyzer</h1>
  <form method="POST" action="/analyzer">
    <input name="username" placeholder="Enter GitHub username" required />
    <button type="submit">Analyze</button>
  </form>
  <% if (error) { %>
    <div class="error"><%= error %></div>
  <% } %>
  <% if (data) { %>
  <div class="dashboard">
    <div>
      <div class="card">
        <div class="profile">
          <img src="<%= data.avatar %>" alt="Avatar">
          <div class="profile-info">
            <h2><%= data.name || data.username %></h2>
            <p>@<%= data.username %></p>
            <p><%= data.bio || 'No bio provided.' %></p>
          </div>
        </div>
        <div class="stats">
          <div class="stat-box"><h3><span class="stat-icon" data-feather="users"></span>Followers</h3><p><%= data.followers %></p></div>
          <div class="stat-box"><h3><span class="stat-icon" data-feather="book-open"></span>Public Repos</h3><p><%= data.publicRepos %></p></div>
          <div class="stat-box"><h3><span class="stat-icon" data-feather="activity"></span>Total Commits</h3><p><%= data.totalCommits %></p></div>
          <div class="stat-box"><h3><span class="stat-icon" data-feather="git-pull-request"></span>Pull Requests</h3><p><%= data.totalPRs %></p></div>
          <div class="stat-box"><h3><span class="stat-icon" data-feather="alert-circle"></span>Issues</h3><p><%= data.totalIssues %></p></div>
          <div class="stat-box"><h3><span class="stat-icon" data-feather="star"></span>Stars</h3><p><%= data.totalStars %></p></div>
          <div class="stat-box"><h3><span class="stat-icon" data-feather="share-2"></span>Forks</h3><p><%= data.totalForks %></p></div>
        </div>
      </div>
    </div>
    <div class="charts">
      <div class="chart-card">
        <div class="chart-title">Top Languages</div>
        <canvas id="languageChart"></canvas>
      </div>
      <div class="chart-card">
        <div class="chart-title">Commits Over Last Year</div>
        <canvas id="commitsChart"></canvas>
      </div>
      <div class="chart-card">
        <div class="chart-title">Stars per Repository</div>
        <canvas id="starsChart"></canvas>
      </div>
      <div class="chart-card">
        <div class="chart-title">PRs vs Issues</div>
        <canvas id="prvsissuesChart"></canvas>
      </div>
    </div>
  </div>
  <% } %>
  <% if (data) { %>
    <script>
      // Language Chart (Doughnut)
      const languageData = <%- JSON.stringify(data.languages) %>;
      const labels = Object.keys(languageData);
      const values = Object.values(languageData);
      const chartColors = [
        "#e3b341", "#f77809", "#a971f7", "#238636",
        "#388bfd", "#ff80c6", "#db3767", "#6cb6ff"
      ];
      new Chart(document.getElementById('languageChart').getContext('2d'), {
        type: 'doughnut',
        data: { labels, datasets: [{
          label: 'Languages',
          data: values,
          backgroundColor: chartColors,
          borderColor: "#23272e",
          borderWidth: 3
        }]},
        options: {
          plugins: {
            legend: { labels: { color: "#d9e8ff", font: { size: 15 } } },
            tooltip: { backgroundColor: '#23272e' }
          }
        }
      });

      // Commits chart (Line)
      const commitsData = <%- JSON.stringify(data.commitsPerMonth || { Jan: 0, Feb: 0, Mar: 0, Apr: 0, May: 0, Jun: 0, Jul: 0, Aug: 0, Sep: 0, Oct: 0, Nov: 0, Dec: 0 }) %>;
      new Chart(document.getElementById('commitsChart').getContext('2d'), {
        type: 'line',
        data: {
          labels: Object.keys(commitsData),
          datasets: [{
            label: 'Commits',
            data: Object.values(commitsData),
            fill: true,
            backgroundColor: "rgba(56,139,253,0.13)",
            borderColor: "#388bfd",
            pointBackgroundColor: "#e3b341",
            tension: 0.4
          }]
        },
        options: {
          plugins: { legend: { labels: { color: "#d9e8ff" } } },
          scales: { x: { ticks: { color: "#aaa" } }, y: { ticks: { color: "#aab" } } }
        }
      });

      // Stars per repository (Bar)
      const starsData = <%- JSON.stringify(data.starsPerRepo || {}) %>;
      new Chart(document.getElementById('starsChart').getContext('2d'), {
        type: 'bar',
        data: {
          labels: Object.keys(starsData),
          datasets: [{
            label: "Stars",
            data: Object.values(starsData),
            backgroundColor: "#e3b341",
            borderColor: "#f7d378",
            borderWidth: 1.5
          }]
        },
        options: {
          plugins: { legend: { display: false } },
          scales: {
            x: { ticks: { color: "#aaa", maxRotation: 45, minRotation: 45 } },
            y: { ticks: { color: "#aab" } }
          }
        }
      });

      // PRs vs Issues (Pie)
      const prCount = <%- JSON.stringify(data.totalPRs) %>;
      const issuesCount = <%- JSON.stringify(data.totalIssues) %>;
      new Chart(document.getElementById('prvsissuesChart').getContext('2d'), {
        type: 'pie',
        data: {
          labels: ["Pull Requests", "Issues"],
          datasets: [{
            data: [prCount, issuesCount],
            backgroundColor: ["#388bfd", "#a971f7"],
            borderColor: "#23272e",
            borderWidth: 3
          }]
        },
        options: {
          plugins: { legend: { labels: { color: "#d9e8ff" } } }
        }
      });

      feather.replace();
    </script>
  <% } %>
</body>
</html>
