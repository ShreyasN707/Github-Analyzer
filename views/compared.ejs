<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>GitHub Users Comparison</title>
  <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      background: linear-gradient(-45deg, #22333b, #0a0908, #22333b, #0a0908);
      background-size: 400% 400%;
      animation: gradientBG 15s ease infinite;
      color: white;
      padding: 20px;
    }
    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }
    h1 {
      font-size: 2.2rem;
      font-weight: 700;
      margin-bottom: 20px;
      text-align: center;
      color: #fff;
    }
    .back-btn {
      padding: 10px 18px;
      background: rgba(255,255,255,0.1);
      border: 1px solid rgba(255,255,255,0.3);
      border-radius: 12px;
      color: white;
      font-weight: 600;
      text-decoration: none;
      margin-bottom: 30px;
      transition: all 0.3s ease;
    }
    .back-btn:hover {
      background: rgba(255,255,255,0.25);
      transform: translateY(-2px);
    }
    .comparison-grid {
      display: flex;
      gap: 30px;
      width: 100%;
      max-width: 1200px;
      flex-wrap: wrap;
    }
    .glass-card {
      background: rgba(255, 255, 255, 0.08);
      backdrop-filter: blur(14px);
      border-radius: 18px;
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 6px 25px rgba(0,0,0,0.3);
      padding: 20px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      min-height: 650px;
      flex: 1 1 45%;
    }
    .glass-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 35px rgba(0,0,0,0.4);
    }
    .profile {
      display: flex;
      align-items: center;
      gap: 15px;
      margin-bottom: 20px;
    }
    .profile img {
      border-radius: 50%;
      width: 80px;
      height: 80px;
      border: 2px solid rgba(255,255,255,0.4);
    }
    .profile h2 {
      margin: 0 0 5px 0;
      font-size: 1.4rem;
      font-weight: 700;
    }
    .profile p {
      margin: 0;
      opacity: 0.8;
      font-size: 0.95rem;
    }
    .stats {
      display: flex;
      flex-direction: column;
      gap: 8px;
    }
    .stat-row {
      display: flex;
      justify-content: space-between;
      font-size: 0.95rem;
      border-bottom: 1px solid rgba(255,255,255,0.2);
      padding: 4px 0;
    }
    .stat-row:last-child { border-bottom: none; }
    .chart-container { width: 100%; margin-top: 20px; }
    canvas { width: 100% !important; height: 250px !important; }

    @media (max-width: 900px) {
      .comparison-grid { flex-direction: column; }
      .back-btn { margin-bottom: 20px; }
    }
  </style>
</head>
<body>
  <h1>GitHub Users Comparison</h1>
  <a href="/analyzer" class="back-btn">â¬… Back</a>

  <div class="comparison-grid">
    <!-- User 1 Card -->
    <div class="glass-card">
      <div>
        <div class="profile">
          <img src="<%= data.user1.avatarUrl %>" alt="avatar">
          <div>
            <h2><%= data.user1.name || data.user1.login %></h2>
            <p><%= data.user1.bio || "No bio available" %></p>
          </div>
        </div>
        <div class="stats">
          <div class="stat-row"><span>Followers:</span> <span><%= data.user1.followers.totalCount %></span></div>
          <div class="stat-row"><span>Total Repos:</span> <span><%= data.user1.repositories.nodes.length %></span></div>
          <div class="stat-row"><span>Total Stars:</span> <span><%= data.user1.repositories.nodes.reduce((sum,r)=>sum+r.stargazerCount,0) %></span></div>
          <div class="stat-row">
            <span>Languages:</span>
            <span><%= data.user1.languages ? Object.keys(data.user1.languages).join(', ') : 'No languages' %></span>
          </div>
        </div>
      </div>
      <div class="chart-container">
        <canvas id="user1Chart"></canvas>
      </div>
    </div>

    <!-- User 2 Card -->
    <div class="glass-card">
      <div>
        <div class="profile">
          <img src="<%= data.user2.avatarUrl %>" alt="avatar">
          <div>
            <h2><%= data.user2.name || data.user2.login %></h2>
            <p><%= data.user2.bio || "No bio available" %></p>
          </div>
        </div>
        <div class="stats">
          <div class="stat-row"><span>Followers:</span> <span><%= data.user2.followers.totalCount %></span></div>
          <div class="stat-row"><span>Total Repos:</span> <span><%= data.user2.repositories.nodes.length %></span></div>
          <div class="stat-row"><span>Total Stars:</span> <span><%= data.user2.repositories.nodes.reduce((sum,r)=>sum+r.stargazerCount,0) %></span></div>
          <div class="stat-row">
            <span>Languages:</span>
            <span><%= data.user2.languages ? Object.keys(data.user2.languages).join(', ') : 'No languages' %></span>
          </div>
        </div>
      </div>
      <div class="chart-container">
        <canvas id="user2Chart"></canvas>
      </div>
    </div>
  </div>

  <script>
    gsap.from(".glass-card", {opacity:0, y:40, duration:0.8, stagger:0.2, ease:"power3.out"});

    // User 1 Line Chart (Contributions)
    const user1Contrib = <%- JSON.stringify(data.user1.activity.data) %>;
    const user1Labels = <%- JSON.stringify(data.user1.activity.labels) %>;
    new Chart(document.getElementById('user1Chart').getContext('2d'), {
      type: 'line',
      data: {
        labels: user1Labels,
        datasets: [{
          label: "<%= data.user1.login %> Contributions",
          data: user1Contrib,
          borderColor: 'rgba(0, 255, 0, 0.8)',
          backgroundColor: 'rgba(0, 255, 0, 0.2)',
          fill: true,
          tension: 0.3,
          pointRadius: 2
        }]
      },
      options: {
        responsive:true,
        plugins:{ legend:{ labels:{ color:'white' } } },
        scales:{ x:{ ticks:{ color:'white' } }, y:{ ticks:{ color:'white' }, beginAtZero:true } }
      }
    });

    // User 2 Line Chart (Contributions)
    const user2Contrib = <%- JSON.stringify(data.user2.activity.data) %>;
    const user2Labels = <%- JSON.stringify(data.user2.activity.labels) %>;
    new Chart(document.getElementById('user2Chart').getContext('2d'), {
      type: 'line',
      data: {
        labels: user2Labels,
        datasets: [{
          label: "<%= data.user2.login %> Contributions",
          data: user2Contrib,
          borderColor: 'rgba(0, 230, 255, 0.8)',
          backgroundColor: 'rgba(0, 230, 255, 0.2)',
          fill: true,
          tension: 0.3,
          pointRadius: 2
        }]
      },
      options: {
        responsive:true,
        plugins:{ legend:{ labels:{ color:'white' } } },
        scales:{ x:{ ticks:{ color:'white' } }, y:{ ticks:{ color:'white' }, beginAtZero:true } }
      }
    });
  </script>
</body>
</html>
